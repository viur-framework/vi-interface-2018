{
  "name": "gulp-postcss",
  "version": "6.0.1",
  "description": "PostCSS gulp plugin",
  "main": "index.js",
  "scripts": {
    "test": "mocha test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/postcss/gulp-postcss.git"
  },
  "keywords": [
    "gulpplugin",
    "postcss",
    "postcss-runner",
    "css"
  ],
  "author": {
    "name": "Andrey Kuzmin",
    "email": "unsoundscapes@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/postcss/gulp-postcss/issues"
  },
  "homepage": "https://github.com/postcss/gulp-postcss",
  "dependencies": {
    "gulp-util": "^3.0.4",
    "postcss": "^5.0.0",
    "vinyl-sourcemaps-apply": "^0.2.0"
  },
  "devDependencies": {
    "es6-promise": "^2.0.1",
    "gulp-sourcemaps": "^1.5.1",
    "mocha": "^2.2.5",
    "proxyquire": "^1.5.0",
    "sinon": "^1.14.1"
  },
  "readme": "# gulp-postcss [![Build Status](https://api.travis-ci.org/postcss/gulp-postcss.png)](https://travis-ci.org/postcss/gulp-postcss)\n\n[PostCSS](https://github.com/postcss/postcss) gulp plugin to pipe CSS through\nseveral processors, but parse CSS only once.\n\n## Install\n\n    $ npm install --save-dev gulp-postcss\n\nInstall required [postcss plugins](https://www.npmjs.com/browse/keyword/postcss-plugin) separately. E.g. for autoprefixer, you need to install [autoprefixer](https://github.com/postcss/autoprefixer) package.\n\n## Basic usage\n\n```js\nvar postcss = require('gulp-postcss');\nvar gulp = require('gulp');\nvar autoprefixer = require('autoprefixer');\nvar mqpacker = require('css-mqpacker');\nvar csswring = require('csswring');\n\ngulp.task('css', function () {\n    var processors = [\n        autoprefixer({browsers: ['last 1 version']}),\n        mqpacker,\n        csswring\n    ];\n    return gulp.src('./src/*.css')\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('./dest'));\n});\n```\n\n## Passing additional options to PostCSS\n\nThe second optional argument to gulp-postcss is passed to PostCSS.\n\nThis, for instance, may be used to enable custom syntax:\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar nested = require('postcss-nested');\nvar scss = require('postcss-scss');\n\ngulp.task('default', function () {\n    var processors = [nested];\n    return gulp.src('in.css')\n        .pipe(postcss(processors, {syntax: scss}))\n        .pipe(gulp.dest('out'));\n});\n```\n\n## Using a custom processor\n\n```js\nvar postcss = require('gulp-postcss');\nvar autoprefixer = require('autoprefixer');\nvar cssnext = require('cssnext');\nvar opacity = function (css, opts) {\n    css.eachDecl(function(decl) {\n        if (decl.prop === 'opacity') {\n            decl.parent.insertAfter(decl, {\n                prop: '-ms-filter',\n                value: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + (parseFloat(decl.value) * 100) + ')\"'\n            });\n        }\n    });\n};\n\ngulp.task('css', function () {\n    var processors = [\n        autoprefixer({browsers: ['last 1 version']}),\n        opacity,\n        cssnext()\n    ];\n    return gulp.src('./src/*.css')\n        .pipe(postcss(processors))\n        .pipe(gulp.dest('./dest'));\n});\n```\n\n## Source map support\n\nSource map is disabled by default, to extract map use together\nwith [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps).\n\n```js\nreturn gulp.src('./src/*.css')\n    .pipe(sourcemaps.init())\n    .pipe(postcss(processors))\n    .pipe(sourcemaps.write('.'))\n    .pipe(gulp.dest('./dest'));\n```\n\n## Changelog\n\n* 6.0.1\n  * Added an example and a test to pass options to PostCSS (e.g. `syntax` option)\n  * Updated vinyl-sourcemaps-apply to 0.2.0\n\n* 6.0.0\n  * Updated PostCSS to version 5.0.0\n\n* 5.1.10\n  * Use autoprefixer in README\n\n* 5.1.9\n  * Prevent unhandled exception of the following pipes from being suppressed by Promise\n\n* 5.1.8\n  * Prevent streamâ€™s unhandled exception from being suppressed by Promise\n\n* 5.1.7\n  * Updated direct dependencies\n\n* 5.1.6\n  * Updated `CssSyntaxError` check\n\n* 5.1.4\n  * Simplified error handling\n  * Simplified postcss execution with object processors\n\n* 5.1.3 Updated travis banner\n\n* 5.1.2 Transferred repo into postcss org on github\n\n* 5.1.1\n  * Allow override of `to` option\n\n* 5.1.0 PostCSS Runner Guidelines\n  * Set `from` and `to` processing options\n  * Don't output js stack trace for `CssSyntaxError`\n  * Display `result.warnings()` content\n\n* 5.0.1\n  * Fix to support object processors\n\n* 5.0.0\n  * Use async API\n\n* 4.0.3\n  * Fixed bug with relative source map\n\n* 4.0.2\n  * Made PostCSS a simple dependency, because peer dependency is deprecated\n\n* 4.0.1\n  * Made PostCSS 4.x a peer dependency\n\n* 4.0.0\n  * Updated PostCSS to 4.0\n\n* 3.0.0\n  * Updated PostCSS to 3.0 and fixed tests\n\n* 2.0.1\n  * Added Changelog\n  * Added example for a custom processor in README\n\n* 2.0.0\n  * Disable source map by default\n  * Test source map\n  * Added Travis support\n  * Use autoprefixer-core in README\n\n* 1.0.2\n  * Improved README\n\n* 1.0.1\n  * Don't add source map comment if used with gulp-sourcemap\n\n* 1.0.0\n  * Initial release\n",
  "readmeFilename": "README.md",
  "_id": "gulp-postcss@6.0.1",
  "dist": {
    "shasum": "50e7847c904e16df258949ab15739dc364a40e5b"
  },
  "_from": "gulp-postcss@",
  "_resolved": "https://registry.npmjs.org/gulp-postcss/-/gulp-postcss-6.0.1.tgz"
}
